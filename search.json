[{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"cols4all: introduction","text":"Color essential many charts maps. lot color palettes choose : visualization software tools palettes many series color palettes, ColorBrewer (Harrower Brewer, 2003). make life easier R users, couple packages contain large collection palettes, notably pals (Wright, 2021) 139 paletteer (Hvitfeldt, 2021) 2569 (!) palettes. However, people often see trees forest, therefore tend stick color palettes know, popular ones. cols4all package also contains large collection palettes (precise 595 time writing), central question: palettes good ? simple answer, since many aspects take account, may opposite effects. cols4all examine following aspects: Color Blind Friendliness First importantly, palette suitable colorblind people? 1 12 humans color vision deficiency, want include ; hence package name “colors ”. HCL Analysis palette work well statistical purposes? analyse HCL (hue-chroma-luminance) color space. Concrete questions analysis following. vivid colors? colors stand equally (call fairness)? hue ranges used quantitative color palettes? Nameability (development) Easy name colors also easy remember. Therefore, beneficial use color palette easy nameable colors. Contrast contrast colors palette? focus two specific questions: 1) sufficient contrast background color (usually white black)? especially needed text also point- line charts. 2) border lines needed separate colors? 3D Blues palette contain blue colors result floating effect? Currently, cols4all contains palettes several popular lesser known color palette series: “brewer”, “carto”, “cols4all”, “hcl”, “kovesi”, “matplotlib”, “met”, “parks”, “poly”, “powerbi”, “scico”, “seaborn”, “stevens”, “tableau”, “tol” , “wes”. Stand-alone palettes included put series “misc” (miscellaneous). palettes series can added well. Color palettes organized made consistent . instance, sequential palettes go light dark. Furthermore, color palette color missing values assigned, especially important spatial data visualization. Currently support several types: categorical (qualitative) palettes, sequential palettes, diverging palettes, bivariate palettes (divided four subtypes).  figure shows main tool package, dashboard. first tab page contains overview table palettes (given input selection criteria). tab pages palette-wise analyses. Color palettes also important areas data visualization, arts, web design, fashion. aspects apply well , obviously different criteria apply: colors dress don’t distinguished colorblind people, websites often contain colors purposely stand others, paintings purposely use visual illusions.","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"related-r-packages","dir":"Articles","previous_headings":"","what":"Related R packages","title":"cols4all: introduction","text":"foundation package another R package: colorspace. use package analyse colors. purpose specifically color blind friendliness checks, additionally use colorblindcheck. pacakges large collection color palettes, particular pals paletteer. features distinguishes cols4all packages: Color palettes characterized analysed. Properties color blindness, fairness (whether colors stand equally), contrast determined palette. Bivariate color palettes available (besides three main palette types: categorical, sequential, diverging). color palettes can loaded analysed. Color missing values made explicit. Palettes made consistent enable comparison. instance, black white (default) removed categorical palettes. Another standard adapt sequential palettes go light dark way round. native support ggplot2 tmap (upcoming version 4). couple exporting options, including (bibtex) citation.","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"installation","dir":"Articles","previous_headings":"Using cols4all","what":"Installation","title":"cols4all: introduction","text":"cols4all available CRAN can installed follows latest development version can installed follows:","code":"install.packages(\"cols4all\", dependencies = TRUE) remotes::install_github(\"mtennekes/cols4all\", dependencies = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"getting-started","dir":"Articles","previous_headings":"Using cols4all","what":"Getting started","title":"cols4all: introduction","text":"Load package: main tool dashboard (shown ), started : types series available? many palettes per type x series? palettes available, e.g diverging hcl series? Give colors! Plot colors:","code":"library(cols4all) c4a_gui() c4a_types() #>   type                          description #> 1  cat                          categorical #> 2  seq                           sequential #> 3  div                            diverging #> 4  cyc                               cyclic #> 5 bivs  bivariate (sequential x sequential) #> 6 bivc bivariate (sequential x categorical) #> 7 bivd   bivariate (sequential x diverging) #> 8 bivg bivariate (sequential x desaturated)  c4a_series() #>        series                                         description #> 1      brewer                                ColorBrewer palettes #> 2       carto                          Palettes designed by CARTO #> 3    cols4all                  cols4all palettes (in development) #> 4         hcl  Palettes from the Hue Chroma Luminance color space #> 5      kovesi                   Palettes designed by Peter Kovesi #> 6  matplotlib         Palettes from the Python library matplotlib #> 7         met Palettes inspired by The Metropolitan Museum of Art #> 8        misc                              Miscellaneous palettes #> 9       parks                 Palettes inspired by National Parks #> 10       poly               Qualitative palettes with many colors #> 11    powerbi                    Palettes from Microsoft Power BI #> 12      scico     Scientific colour map palettes by Fabio Crameri #> 13    seaborn            Palettes from the Python library Seaborn #> 14    stevens                Bivariate palettes by Joshua Stevens #> 15    tableau                        Palettes designed by Tableau #> 16        tol                       Palettes designed by Paul Tol #> 17        wes                   Palettes from Wes Anderson movies c4a_overview() #>        series                                         description cat seq div #> 1      brewer                                ColorBrewer palettes   8  18   9 #> 2       carto                          Palettes designed by CARTO   6  21   7 #> 3    cols4all                  cols4all palettes (in development)  14  NA   2 #> 4         hcl  Palettes from the Hue Chroma Luminance color space   9  23  11 #> 5      kovesi                   Palettes designed by Peter Kovesi  NA  28  14 #> 6  matplotlib         Palettes from the Python library matplotlib  NA  51  12 #> 7         met Palettes inspired by The Metropolitan Museum of Art  33   8  14 #> 8        misc                              Miscellaneous palettes   5  NA  NA #> 9       parks                 Palettes inspired by National Parks  22   5   3 #> 10       poly               Qualitative palettes with many colors   9  NA  NA #> 11    powerbi                    Palettes from Microsoft Power BI  19   1   4 #> 12      scico     Scientific colour map palettes by Fabio Crameri  21  21  10 #> 13    seaborn            Palettes from the Python library Seaborn   6   4   2 #> 14    stevens                Bivariate palettes by Joshua Stevens  NA  NA  NA #> 15    tableau                        Palettes designed by Tableau  29  23  28 #> 16        tol                       Palettes designed by Paul Tol   8   8   4 #> 17        wes                   Palettes from Wes Anderson movies  23  NA   1 #>    cyc bivs bivc bivd bivg #> 1   NA    2    2    1   NA #> 2   NA   NA   NA   NA   NA #> 3   NA    2   NA    2    5 #> 4    6   NA   NA   NA   NA #> 5    8   NA   NA   NA   NA #> 6    3   NA   NA   NA   NA #> 7   NA   NA    1   NA   NA #> 8   NA   NA    3   NA   NA #> 9   NA   NA   NA   NA   NA #> 10  NA   NA   NA   NA   NA #> 11  NA   NA   NA   NA   NA #> 12   5   NA    2   NA    1 #> 13  NA   NA   NA   NA   NA #> 14  NA    5   NA   NA   NA #> 15  NA   NA    3   NA   NA #> 16  NA   NA   NA   NA   NA #> 17  NA   NA   NA   NA   NA # Diverging palettes from the 'hcl' series c4a_palettes(type = \"div\", series = \"hcl\") #>  [1] \"hcl.blue_red\"     \"hcl.blue_red2\"    \"hcl.blue_red3\"    \"hcl.red_green\"    #>  [5] \"hcl.purple_green\" \"hcl.purple_brown\" \"hcl.green_brown\"  \"hcl.blue_yellow2\" #>  [9] \"hcl.blue_yellow3\" \"hcl.green_orange\" \"hcl.cyan_magenta\" # select purple green palette from the hcl series: c4a(\"hcl.purple_green\", 11) #>  [1] \"#492050\" \"#82498C\" \"#B574C2\" \"#D2A9DB\" \"#E8D4ED\" \"#F1F1F1\" \"#C8E1C9\" #>  [8] \"#91C392\" \"#4E9D4F\" \"#256C26\" \"#023903\"  # get the associated color for missing values c4a_na(\"hcl.purple_green\") #> [1] \"#868686\" c4a_plot(\"hcl.purple_green\", 11, include.na = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"using-cols4all-palettes-in-ggplot2","dir":"Articles","previous_headings":"Using cols4all","what":"Using cols4all palettes in ggplot2","title":"cols4all: introduction","text":"","code":"library(ggplot2) data(\"diamonds\") diam_exp = diamonds[diamonds$price >= 15000, ]  # discrete categorical scale ggplot(diam_exp, aes(x = carat, y = price, color = color)) +     geom_point(size = 2) +     scale_color_discrete_c4a_cat(\"carto.safe\") +     theme_light() # continuous diverging scale ggplot(diam_exp, aes(x = carat, y = depth, color = price)) +     geom_point(size = 2) +     scale_color_continuous_c4a_div(\"wes.zissou1\", mid = mean(diam_exp$price)) +     theme_light()"},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"overview-of-functions","dir":"Articles","previous_headings":"Using cols4all","what":"Overview of functions","title":"cols4all: introduction","text":"Main functions: c4a_gui Dashboard analyzing palettes c4a Get colors palette (c4a_na associated color missing values) c4a_plot Plot color palette Palette names properties: c4a_palettes Get available palette names c4a_series Get available series names c4a_types Get implemented types c4a_overview Get overview palettes per series x type. c4a_citation Show cite palettes (bibtex code). c4a_info Get information palette, type maximum number colors .P Environment via palette names can browsed auto-completion (using $) Importing exporting palettes: c4a_data Build color palette data c4a_load Load color palette data c4a_sysdata_import Import system data c4a_sysdata_export Export system data Edit color palette data c4a_duplicate Duplicates color palette c4a_modify Modifies palette colors ggplot2 scale_<aesthetic>_<mapping>_c4a_<type> e.g. scale_color_continuous_c4a_div Add scale ggplot2.","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"color-spaces","dir":"Articles","previous_headings":"","what":"Color spaces","title":"cols4all: introduction","text":"Visual perception, particular colors, complex. purpose information visualization explained accessible way Ware (2019). vignette, briefly describe color spaces needed understand functionality cols4all. human eye three types cones (specific photoreceptor cells retina), sensitive light different wavelengths: long, medium, short. peak sensitivities (565, 540, 440nm respectively) correspond primary colors red, green, blue respectively. computer graphics, color usually defined RGB, mixture three primary colors. RGB colors often represented hex-format (e.g. #FF00FF), first two characters specify red, third fourth green last two blue. Therefore #FF00FF purple. standard RGB space computer graphics sRGB (exactly defines primary colors, white point, -called gamma correction needed perceive grayscale linearly). analyse color palettes, also use polarLUV color space, transformation CIELUV space. space, known HCL, color defined three variables: Hue hue color call casually name colors: e.g. yellow, purple, blue, orange, etc. defined polar coordinate, takes values 0 360 degrees. Chroma vividness intensity color. higher, colorful. maximum chroma depends hue. Grayscale colors 0 chroma. maximum value depends hue luminance. Luminance amount light emitted object (e.g. computer screen). similar brightness, although latter relative measure. takes values 0 100.","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"colorblind-friendliness","dir":"Articles","previous_headings":"Indicators","what":"Colorblind friendliness","title":"cols4all: introduction","text":"First , use distance measure two colors B CIE defined 2000 (see Lindbloom, Bruce Justin. Delta E (CIE 2000).). simplicity, apply two labels: colorblind friendly ☺ colorblind unfriendly 👀. palette without label classified . definition labels depend palette type: ☺ (colorblind friendly): min_dist >= 10 👀 (colorblind unfriendly): min_dist <= 2 numbers parameters can changed via c4a_options. ☺ (colorblind friendly): min_step >= 5 👀 (colorblind unfriendly): min_dist <= 1 , numbers parameters can changed via c4a_options. Note metric useful continuous scale used. case, recommended analyse palette say 7 9 colors. ☺ (colorblind friendly): min_step >= 5 inter_wing_dist >= 10 👀 (colorblind unfriendly): min_dist <= 1 inter_wing_dist <= 4 parameters can changed via c4a_options. (bivariate (seq x seq)) Three sequential palettes extracted: ) first column, b) bottom row, c) diagonal. combined form three diverging palettes: ab, ac, bc. diverging palette, checks applied described regular diverging palettes. (bivariate (seq x cat)) row, checks apply categorical palette (bivariate (seq x div)) Three sequential palettes extracted: ) first column, b) middle column column, c) last column. combined form three diverging palettes: ab, ac, bc. diverging palette, checks applied described regular diverging palettes. (bivariate (seq x desaturated)) diverging palette formed first last column. checks applied described regular diverging palettes.","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"hcl-analysis","dir":"Articles","previous_headings":"Indicators","what":"HCL analysis","title":"cols4all: introduction","text":"Regarding used hues, simple good bad. However, quantitative palettes distinguish Single hue palettes (🖌) recommended quantitative analysis, harder distinguish colors Spectral (🌈) easy distinguish colors, less suitable quantitative analysis Two-hue palettes (☯) wing distinct hue, highly recommended Spectral (🌈) easy distinguish colors, less suitable quantitative analysis Regarding used chroma / vividness, label color palette vivid (🕶) contains color chroma value 100 higher pastel (❉) colors chroma values 70 threshold numbers can configured via options (). Pastel (low chroma) colors recommended space-filling visualizations, like maps bar charts. Vivid (high chroma) colors small objects, dots, lines, text labels. also use chroma luminance values palette colors find whether colors stand colors. Ideally, categorical palette contain colors stand equally (otherwise, one color draw attention another, may bias perception interpretation shown data). Colors high chroma value stand less chromatic colors. Furthermore, bright background, dark colors (low luminance) stand , bright colors (high luminance) stand dark background. Luminance considered categorical palettes, quantitative palettes (sequential diverging) often map numeric variable luminance. Let us define luminance range (Lrange) maximum minus minimum luminance value palette chroma range (Crange) maximum chroma value minus minimum chroma value. Regarding Fairness consider two metrics: luminance range (Lrange) chroma range (Crange). call palette: fair (♡) Crange <= 50 (categorical palettes ) Lrange <= 30 unfair (⨯) Crange <= 80 (categorical palettes ) Lrange >= 50 Note harmonic color palettes usually color blind friendly. Furthermore, luminance values colors equal, contrast colors low, requires use border lines (see ).","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"naming","dir":"Articles","previous_headings":"Indicators","what":"Naming","title":"cols4all: introduction","text":"property still development. Details follow.","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"contrast","dir":"Articles","previous_headings":"Indicators","what":"Contrast","title":"cols4all: introduction","text":"border two colored shapes appears wobbly colors equally luminant (bright), matter hue (red, blue, etc.) . visual illusion called equiluminance. contrast ratio measure equiluminance, calculated CR = (L1 + 0.05) / (L2 + 0.05), L1 L2 luminances (normalized 0 1) lighter darker colors, respectively. Note minimum contrast ratio 1 maximum 21. overview table, three flags indicate low contrast (CR < 1.2): 🏁: two colors palettes 🏳: one color palette white 🏴: one color palette black go-solution prevent wobbly borders using black white (depending lightness colors) border lines.","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"d-blues","dir":"Articles","previous_headings":"Indicators","what":"3D Blues","title":"cols4all: introduction","text":"Pure blue colors, mean 0 low number R (red) G (green) channels high number B (blue) channel may cause visual illusion called chromostereopsis. effect especially prominent blue objects shown next red objects black background. table column “3D Blues” indicates palette contains pure blue color. used symbol B7#9 (refers music chord used blues music).","code":""},{"path":"https://mtennekes.github.io/cols4all/articles/cols4all.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"cols4all: introduction","text":"Harrower M, Brewer CA (2003). “ColorBrewer.org: Online Tool Selecting Colour Schemes Maps.” Cartographic Journal, 40(1), 27-37. Hvitfeldt E. (2021). paletteer: Comprehensive Collection Color Palettes. version 1.3.0. https://github.com/EmilHvitfeldt/paletteer Ware, C (2019). Information Visualization - Perception Design - 4th Edition. Elsevier Wright K (2021). pals: Color Palettes, Colormaps, Tools Evaluate . R package version 1.7, https://CRAN.R-project.org/package=pals.","code":""},{"path":"https://mtennekes.github.io/cols4all/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer. Marco Puts. Contributor. Achim Zeileis. Contributor. Jakub Nowosad. Contributor. Robin Lovelace. Contributor. Helgasoft. Contributor. Matthew Petroff. Contributor. Olivier Roy. Contributor.","code":""},{"path":"https://mtennekes.github.io/cols4all/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M, Puts MJH (2023). “cols4all: color palette analysis tool.” EuroVis (Short Papers). doi:10.2312/evs.20231040.","code":"@InProceedings{,   title = {{cols4all}: a color palette analysis tool},   author = {Martijn Tennekes and Marco J. H. Puts},   booktitle = {EuroVis (Short Papers)},   publisher = {Wiley},   doi = {10.2312/evs.20231040},   year = {2023}, }"},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"colors-for-all-","dir":"","previous_headings":"","what":"Colors for all","title":"Colors for all","text":"cols4all R package selecting color palettes. “Color ” refers mission colors usable just people normal color vision, also people color vision deficiency. Currently, package contains palettes several popular lesser known color palette series. palettes series can added well. Color palettes well organized made consistent . Moreover, scored several aspects: color-blind-friendliness, presence intense colors (avoided), overall aesthetic harmony, many different hues used. Finally, color palette color missing values assigned, especially important spatial data visualization. Currently support several types: categorical (qualitative) palettes, sequential palettes, diverging palettes, bivariate palettes (divided four subtypes).","code":""},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Colors for all","text":"cols4all available CRAN: development version can installed follows:","code":"install.packages(\"cols4all\", dependencies = TRUE) install.packages(\"remotes\") remotes::install_github(\"mtennekes/cols4all\", dependencies = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Colors for all","text":"Load package: main tool dashboard, started :  types series available? many palettes per type x series? palettes available, e.g diverging hcl series? Give colors! Plot colors:","code":"library(cols4all) c4a_gui() c4a_types() #>   type                          description #> 1  cat                          categorical #> 2  seq                           sequential #> 3  div                            diverging #> 4 bivs  bivariate (sequential x sequential) #> 5 bivc bivariate (sequential x categorical) #> 6 bivd   bivariate (sequential x diverging) #> 7 bivg bivariate (sequential x desaturated)  c4a_series() #>     series                                         description #> 1   brewer                                ColorBrewer palettes #> 2      c4a                  cols4all palettes (in development) #> 3    carto                          Palettes designed by CARTO #> 4      hcl  Palettes from the Hue Chroma Luminance color space #> 5   kovesi                   Palettes designed by Peter Kovesi #> 6      met Palettes inspired by The Metropolitan Museum of Art #> 7     misc                              Miscellaneous palettes #> 8    miscs                                                <NA> #> 9    parks                 Palettes inspired by National Parks #> 10    poly               Qualitative palettes with many colors #> 11   scico     Scientific colour map palettes by Fabio Crameri #> 12 seaborn            Palettes from the Python library Seaborn #> 13 stevens                Bivariate palettes by Joshua Stevens #> 14 tableau                        Palettes designed by Tableau #> 15     tol                       Palettes designed by Paul Tol #> 16 viridis          Palettes fom the Python library matplotlib #> 17     wes                   Palettes from Wes Anderson movies c4a_overview() #>         cat seq div bivs bivc bivd bivg #> brewer    8  18   9    2    1    1   NA #> c4a      NA  NA   2    2   NA    2    5 #> carto     6  21   7   NA   NA   NA   NA #> hcl       9  23  11   NA   NA   NA   NA #> kovesi   NA  17  13   NA   NA   NA   NA #> met      33   8  14   NA    1   NA   NA #> misc      1  NA  NA   NA    3   NA   NA #> miscs     4  NA  NA   NA   NA   NA   NA #> parks    22   5   3   NA   NA   NA   NA #> poly      9  NA  NA   NA   NA   NA   NA #> scico    21  21  10   NA    2   NA    1 #> seaborn   6   4   2   NA   NA   NA   NA #> stevens  NA  NA  NA    5   NA   NA   NA #> tableau  29  23  28   NA   NA   NA   NA #> tol       8   8   4   NA   NA   NA   NA #> viridis  NA   7   1   NA   NA   NA   NA #> wes      23  NA   1   NA   NA   NA   NA # Diverging palettes from the 'hcl' series c4a_palettes(type = \"div\", series = \"hcl\") #>  [1] \"hcl.blue_red1\"    \"hcl.blue_red2\"    \"hcl.blue_red3\"    \"hcl.red_green\"    #>  [5] \"hcl.purple_green\" \"hcl.purple_brown\" \"hcl.green_brown\"  \"hcl.blue_yellow2\" #>  [9] \"hcl.blue_yellow3\" \"hcl.green_orange\" \"hcl.cyan_magenta\" # select purple green palette from the hcl series: c4a(\"hcl.purple_green\", 11) #>  [1] \"#492050\" \"#82498C\" \"#B574C2\" \"#D2A9DB\" \"#E8D4ED\" \"#F1F1F1\" \"#C8E1C9\" #>  [8] \"#91C392\" \"#4E9D4F\" \"#256C26\" \"#023903\"  # get the associated color for missing values c4a_na(\"hcl.purple_green\") #> [1] \"#868686\" c4a_plot(\"hcl.purple_green\", 11, include.na = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"using-cols4all-palettes-in-ggplot2","dir":"","previous_headings":"","what":"Using cols4all palettes in ggplot2","title":"Colors for all","text":"","code":"library(ggplot2) data(\"diamonds\") diam_exp = diamonds[diamonds$price >= 15000, ]  # discrete categorical scale ggplot(diam_exp, aes(x = carat, y = price, color = color)) +     geom_point(size = 2) +     scale_color_discrete_c4a_cat(\"carto.safe\") +     theme_light() # continuous diverging scale ggplot(diam_exp, aes(x = carat, y = depth, color = price)) +     geom_point(size = 2) +     scale_color_continuous_c4a_div(\"wes.zissou1\", mid = mean(diam_exp$price)) +     theme_light()"},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"overview-of-functions","dir":"","previous_headings":"","what":"Overview of functions","title":"Colors for all","text":"Main functions: c4a_gui Dashboard analyzing palettes c4a Get colors palette (c4a_na associated color missing values) c4a_plot Plot color palette Palette names properties: c4a_palettes Get available palette names c4a_series Get available series names c4a_types Get implemented types c4a_overview Get overview palettes per series x type. c4a_citation Show cite palettes (bibtex code). c4a_info Get information palette, type maximum number colors .P Environment via palette names can browsed auto-completion (using $) Importing exporting palettes: c4a_data Build color palette data c4a_load Load color palette data c4a_sysdata_import Import system data c4a_sysdata_export Export system data Edit color palette data c4a_duplicate Duplicates color palette c4a_modify Modifies palette colors ggplot2 scale_<aesthetic>_<mapping>_c4a_<type> e.g. scale_color_continuous_c4a_div Add scale ggplot2.","code":""},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"related-r-packages","dir":"","previous_headings":"","what":"Related R packages","title":"Colors for all","text":"foundation package another R package: colorspace. use package analyse colors. purpose specifically color blind friendliness checks, also use colorblindcheck. pacakges large collection color palettes, particular pals paletteer. features distinguishes cols4all packages: Color palettes characterized analysed. Properties color blindness, fairness (whether colors stand equally), contrast determined palette. Bivariate color palettes available (besides three main palette types: categorical, sequential, diverging). color palettes can loaded analysed. Color missing values made explicit. Palettes made consistent enable comparison. instance, black white (default) removed categorical palettes. Another standard adapt sequential palettes go light dark way round. native support ggplot2 tmap (upcoming version 4). couple exporting options, including (bibtex) citation.","code":""},{"path":"https://mtennekes.github.io/cols4all/index.html","id":"feedback-welcome","dir":"","previous_headings":"","what":"Feedback welcome!","title":"Colors for all","text":"everything working expected? miss certain palettes? ideas improvement measure palette properties? Let us know! (via github issues)","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a cols4all color palette — c4a","title":"Get a cols4all color palette — c4a","text":"Get cols4all color palette: c4a returns colors specified palette, c4a_na returns color missing value associated specified palette. Run c4a_gui see available palettes, also listed c4a_palettes.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a cols4all color palette — c4a","text":"","code":"c4a(   palette = NULL,   n = NA,   m = NA,   type = c(\"cat\", \"seq\", \"div\", \"cyc\", \"bivs\", \"bivc\", \"bivd\", \"bivg\"),   reverse = FALSE,   order = NULL,   range = NA,   colorsort = \"orig\",   format = c(\"hex\", \"RGB\", \"HCL\"),   nm_invalid = c(\"error\", \"repeat\", \"interpolate\"),   verbose = TRUE )  c4a_ramp(..., space = c(\"rgb\", \"Lab\"), interpolate = c(\"linear\", \"spline\"))  c4a_na(palette = NULL, type = c(\"cat\", \"seq\", \"div\", \"cyc\"), verbose = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a cols4all color palette — c4a","text":"palette name palette. See c4a_palettes options. omitted, default palette provided c4a_default_palette. palette name can prefixed \"-\" symbol, reverse palette (can also done reverse argument). n number colors. omitted : type \"cat\" maximum number colors returned, types \"seq\" \"div\", 9 colors. m number rows case type \"bivs\", \"bivc\", \"bivd\"  \"bivg\" (stand respectively sequential, categorical, diverging desaturated (g 'grayscale')). type type color palette, case palette specified: one \"cat\" (categorical/qualitative palette), \"seq\" (sequential palette), \"div\" (diverging palette), \"bivs\"/\"bivc\"/\"bivd\"/\"bivg\" (bivariate: respectively seq-seq seq-cat, seq-div, seq-desaturated). reverse palette reversed? order order colors. applicable \"cat\" palettes range vector two numbers 0 1 determine range used sequential diverging palettes. first number determines palette begins, second number ends. sequential \"seq\" palettes, 0 means leftmost (normally lightest) color, 1 rightmost (often darkest) color. diverging \"seq\" palettes, 0 means middle color, 1 extremes. one number provided, number interpreted endpoint (0 taken start). colorsort Sort colors (\"cat\" ). Options: \"orig\" (original order), \"Hx\" (hue, x starting number 0 360), \"C\" (chroma), \"L\" (luminance) format format colors. One : \"hex\" character vector hex color values, \"RGB\" 3 column matrix RGB values, \"HCL\" 3-column matrix HCL values nm_invalid done case n m larger maximum number colors smaller minimum number? Options \"error\" (error returned), \"repeat\", palette repeated, \"interpolate\" colors interpolated. categorical \"cat\" palettes . verbose messages printed? ... passed c4a. space character string; interpolation RGB CIE Lab color spaces interpolate use spline linear interpolation","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a cols4all color palette — c4a","text":"vector colors (c4a) color (c4a_na)","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a cols4all color palette — c4a","text":"","code":"c4a_palettes(\"div\") #>   [1] \"hcl.blue_red\"                            #>   [2] \"hcl.blue_red2\"                           #>   [3] \"hcl.blue_red3\"                           #>   [4] \"hcl.red_green\"                           #>   [5] \"hcl.purple_green\"                        #>   [6] \"hcl.purple_brown\"                        #>   [7] \"hcl.green_brown\"                         #>   [8] \"hcl.blue_yellow2\"                        #>   [9] \"hcl.blue_yellow3\"                        #>  [10] \"hcl.green_orange\"                        #>  [11] \"hcl.cyan_magenta\"                        #>  [12] \"brewer.br_bg\"                            #>  [13] \"brewer.pi_yg\"                            #>  [14] \"brewer.prgn\"                             #>  [15] \"brewer.pu_or\"                            #>  [16] \"brewer.rd_bu\"                            #>  [17] \"brewer.rd_gy\"                            #>  [18] \"brewer.rd_yl_bu\"                         #>  [19] \"brewer.rd_yl_gn\"                         #>  [20] \"brewer.spectral\"                         #>  [21] \"tol.sunset\"                              #>  [22] \"tol.nightfall\"                           #>  [23] \"tol.bu_rd\"                               #>  [24] \"tol.pu_gn\"                               #>  [25] \"matplotlib.pi_yg\"                        #>  [26] \"matplotlib.prgn\"                         #>  [27] \"matplotlib.br_bg\"                        #>  [28] \"matplotlib.pu_or\"                        #>  [29] \"matplotlib.rd_gy\"                        #>  [30] \"matplotlib.rd_bu\"                        #>  [31] \"matplotlib.rd_yl_bu\"                     #>  [32] \"matplotlib.rd_yl_gn\"                     #>  [33] \"matplotlib.spectral\"                     #>  [34] \"matplotlib.coolwarm\"                     #>  [35] \"matplotlib.bwr\"                          #>  [36] \"matplotlib.seismic\"                      #>  [37] \"kovesi.diverging_isoluminant_cjm_75_c23\" #>  [38] \"kovesi.cy_gy_mg\"                         #>  [39] \"kovesi.cy_gy_or\"                         #>  [40] \"kovesi.bu_gy_rd\"                         #>  [41] \"kovesi.bu_gy_yl\"                         #>  [42] \"kovesi.rainbow\"                          #>  [43] \"kovesi.bu_bk_rd\"                         #>  [44] \"kovesi.bu_bk_br\"                         #>  [45] \"kovesi.bu_wh_rd\"                         #>  [46] \"kovesi.bu_wh_rd2\"                        #>  [47] \"kovesi.cy_wh_mg\"                         #>  [48] \"kovesi.gn_bk_rd\"                         #>  [49] \"kovesi.gn_wh_rd\"                         #>  [50] \"kovesi.gn_wh_pu\"                         #>  [51] \"wes.zissou1\"                             #>  [52] \"carto.tropic\"                            #>  [53] \"carto.temps\"                             #>  [54] \"carto.teal_rose\"                         #>  [55] \"carto.geyser\"                            #>  [56] \"carto.fall\"                              #>  [57] \"carto.earth\"                             #>  [58] \"carto.army_rose\"                         #>  [59] \"scico.broc\"                              #>  [60] \"scico.cork\"                              #>  [61] \"scico.vik\"                               #>  [62] \"scico.lisbon\"                            #>  [63] \"scico.tofino\"                            #>  [64] \"scico.berlin\"                            #>  [65] \"scico.bam\"                               #>  [66] \"scico.roma\"                              #>  [67] \"scico.vanimo\"                            #>  [68] \"scico.managua\"                           #>  [69] \"tableau.orange_blue_diverging\"           #>  [70] \"tableau.red_green_diverging\"             #>  [71] \"tableau.green_blue_diverging\"            #>  [72] \"tableau.red_blue_diverging\"              #>  [73] \"tableau.red_black_diverging\"             #>  [74] \"tableau.gold_purple_diverging\"           #>  [75] \"tableau.red_green_gold_diverging\"        #>  [76] \"tableau.sunset_sunrise_diverging\"        #>  [77] \"tableau.orange_blue_white_diverging\"     #>  [78] \"tableau.red_green_white_diverging\"       #>  [79] \"tableau.green_blue_white_diverging\"      #>  [80] \"tableau.red_blue_white_diverging\"        #>  [81] \"tableau.red_black_white_diverging\"       #>  [82] \"tableau.orange_blue_light_diverging\"     #>  [83] \"tableau.temperature_diverging\"           #>  [84] \"tableau.classic_red_green\"               #>  [85] \"tableau.classic_red_blue\"                #>  [86] \"tableau.classic_red_black\"               #>  [87] \"tableau.classic_area_red_green\"          #>  [88] \"tableau.classic_orange_blue\"             #>  [89] \"tableau.classic_green_blue\"              #>  [90] \"tableau.classic_red_white_green\"         #>  [91] \"tableau.classic_red_white_black\"         #>  [92] \"tableau.classic_orange_white_blue\"       #>  [93] \"tableau.classic_red_white_black_light\"   #>  [94] \"tableau.classic_orange_white_blue_light\" #>  [95] \"tableau.classic_red_white_green_light\"   #>  [96] \"tableau.classic_red_green_light\"         #>  [97] \"seaborn.vlag\"                            #>  [98] \"seaborn.icefire\"                         #>  [99] \"cols4all.bu_br_div\"                      #> [100] \"cols4all.pu_gn_div\"                      #> [101] \"met.benedictus\"                          #> [102] \"met.cassatt1\"                            #> [103] \"met.cassatt2\"                            #> [104] \"met.demuth\"                              #> [105] \"met.hiroshige\"                           #> [106] \"met.homer1\"                              #> [107] \"met.homer2\"                              #> [108] \"met.ingres\"                              #> [109] \"met.isfahan1\"                            #> [110] \"met.johnson\"                             #> [111] \"met.morgenstern\"                         #> [112] \"met.okeeffe1\"                            #> [113] \"met.paquin\"                              #> [114] \"met.troy\"                                #> [115] \"parks.acadia\"                            #> [116] \"parks.arches\"                            #> [117] \"parks.olympic\"                           #> [118] \"powerbi.tidal\"                           #> [119] \"powerbi.temperature\"                     #> [120] \"powerbi.solar\"                           #> [121] \"powerbi.divergent\"                        c4a(type = \"cat\") #> These are the colors from palette \"tol.muted\", the default for type \"cat\": #>  [1] \"#CC6677\" \"#332288\" \"#DDCC77\" \"#117733\" \"#88CCEE\" \"#882255\" \"#44AA99\" #>  [8] \"#999933\" \"#AA4499\" \"#DDDDDD\"  (pal = c4a(\"tol.sunset\", n = 7, range = c(0, .6))) #> [1] \"#6EA6CD\" \"#97C9E1\" \"#C2E4EF\" \"#EAECCC\" \"#FDDA8B\" \"#FDB366\" \"#F67E4B\"  c4a_plot(pal)   c4a(\"set2\") #> Multiple palettes called \"set2\" found: \"brewer.set2\", \"hcl.set2\". The first one, \"brewer.set2\", is returned. #> [1] \"#66C2A5\" \"#FC8D62\" \"#8DA0CB\" \"#E78AC3\" \"#A6D854\" \"#FFD92F\" \"#E5C494\" #> [8] \"#B3B3B3\"  c4a(\"hcl.set2\") #>  [1] \"#ED90A4\" \"#EB9397\" \"#E79689\" \"#E29A7C\" \"#DC9E70\" \"#D4A264\" \"#CCA65A\" #>  [8] \"#C2AA53\" \"#B7AE50\" \"#ABB150\" \"#9DB555\" \"#8EB85D\" \"#7EBA68\" \"#6CBD73\" #> [15] \"#58BF80\" \"#40C08D\" \"#1DC199\" \"#00C1A6\" \"#00C1B2\" \"#00C0BE\" \"#00BFC8\" #> [22] \"#00BCD2\" \"#38B9DA\" \"#56B6E1\" \"#6FB1E7\" \"#86ADEA\" \"#9AA8EC\" \"#ACA2EC\" #> [29] \"#BB9DEA\" \"#C998E7\" \"#D494E1\" \"#DD91DA\" \"#E48FD1\" \"#E98EC7\" \"#EC8EBC\" #> [36] \"#EE8EB0\"  c4a(\"hcl.set2\", n = 8) #> [1] \"#ED90A4\" \"#D8A06A\" \"#ABB150\" \"#62BE79\" \"#00C1B2\" \"#48B8DE\" \"#ACA2EC\" #> [8] \"#E190D6\"  # reversed palette c4a(\"hcl.set2\", reverse = TRUE, n = 8) #> [1] \"#E190D6\" \"#ACA2EC\" \"#48B8DE\" \"#00C1B2\" \"#62BE79\" \"#ABB150\" \"#D8A06A\" #> [8] \"#ED90A4\"  # handy shortcut c4a(\"-hcl.set2\", n = 8) #> [1] \"#E190D6\" \"#ACA2EC\" \"#48B8DE\" \"#00C1B2\" \"#62BE79\" \"#ABB150\" \"#D8A06A\" #> [8] \"#ED90A4\"  # the color for missing values is white: c4a_na(\"hcl.set2\") #> [1] \"#FFFFFF\""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Show how to cite palettes — c4a_citation","title":"Show how to cite palettes — c4a_citation","text":"Show cite palettes","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show how to cite palettes — c4a_citation","text":"","code":"c4a_citation(name, verbose = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show how to cite palettes — c4a_citation","text":"name name palette series verbose text printed (FALSE utils::bibentry object returned)","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show how to cite palettes — c4a_citation","text":"utils::bibentry object","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show how to cite palettes — c4a_citation","text":"","code":"c4a_citation(\"hcl\") #>  #> To cite palettes from series \"hcl\" in publications use: #>  #> Zeileis A, Hornik K, Murrell P (2009). “Escaping RGBland: Selecting #> Colors for Statistical Graphics.” _Computational Statistics & Data #> Analysis_, *53*(9), 3259-3270. doi:10.1016/j.csda.2008.11.033 #> <https://doi.org/10.1016/j.csda.2008.11.033>. #>  #> @Article{hcl, #>   title = {Escaping {RGB}land: Selecting Colors for Statistical Graphics}, #>   author = {Achim Zeileis and Kurt Hornik and Paul Murrell}, #>   journal = {Computational Statistics \\& Data Analysis}, #>   year = {2009}, #>   volume = {53}, #>   number = {9}, #>   pages = {3259--3270}, #>   doi = {10.1016/j.csda.2008.11.033}, #> }  c4a_citation(\"poly.glasbey\") #>  #> To cite palette glasbey from series \"poly\" in publications use: #>  #> Glasbey C, van der Heijden G, Toh VFK, Gray A (2007). “Colour displays #> for categorical images.” _Color Research & Application_, *32*(4), #> 304-309. doi:10.1002/col.20327 <https://doi.org/10.1002/col.20327>, #> <https://onlinelibrary.wiley.com/doi/abs/10.1002/col.20327>. #>  #> @Article{poly.glasbey, #>   author = {Chris Glasbey and Gerie {van der Heijden} and Vivian F. K. Toh and Alision Gray}, #>   title = {Colour displays for categorical images}, #>   journal = {Color Research \\& Application}, #>   volume = {32}, #>   number = {4}, #>   pages = {304-309}, #>   keywords = {pseudo-colour, look-up table, perceptually uniform colour space, RGB, CIELAB, colour quantization}, #>   doi = {https://doi.org/10.1002/col.20327}, #>   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/col.20327}, #>   year = {2007}, #> }"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and load palette data — c4a_data","title":"Build and load palette data — c4a_data","text":"Build palette data. c4a_data c4a_data_as_is build data palette. difference former may restructure palette colors (see details) whereas latter takes palette colors . Data can subsequently loaded cols4all via c4a_load. c4a_data function can also used read c4a_info objects, contain data single palette.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and load palette data — c4a_data","text":"","code":"c4a_data(   x,   xNA = NA,   types = \"cat\",   series = \"x\",   nmin = NA,   nmax = NA,   ndef = NA,   mmin = NA,   mmax = NA,   mdef = NA,   format.palette.name = TRUE,   remove.blacks = NA,   remove.whites = NA,   take.gray.for.NA = FALSE,   remove.other.grays = FALSE,   light.to.dark = FALSE,   remove.names = TRUE,   biv.method = \"byrow\",   space = \"rgb\",   range_matrix_args = list(NULL),   bib = NA,   description = NA )  c4a_load(data, overwrite = FALSE)  c4a_data_as_is(   ...,   format.palette.name = FALSE,   remove.blacks = FALSE,   remove.whites = FALSE,   take.gray.for.NA = FALSE,   remove.other.grays = FALSE,   light.to.dark = FALSE,   remove.names = FALSE )"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and load palette data — c4a_data","text":"x either named list color palettes c4a_info object. first case: see details indexing. second case bypass arguments. xNA colors missing values. Vector length x (length 1). NA values, color missing values automatically determined (preferable light grayscale color, indistinguishable color blind people, light color low chroma value selected) types character vector length x (length 1), determines type palette: \"cat\", \"seq\", \"div\", \"bivs\", \"bivc\", \"bivd\", \"bivg\". See details. series character vector length x (length 1), determines series. nmin, nmax, ndef minimum / maximum / default number colors palette. default: nmin = 1, \"cat\" nmax ndef number supplied colors. types, nmax Inf. ndef 7 \"seq\", 9. diverging palettes, numbers refer number columns. (See mmin, mmax, mdef rows) mmin, mmax, mdef minimum / maximum / default number rows bivariate palettes. format.palette.name palette names formatted lowercase/underscore format? remove.blacks, remove.whites, take.gray..NA, remove..grays arguments determine processing grayscale colors categorical \"cat\" palettes: remove.blacks (near) blacks, removed first. Next, take.gray..NA, xNA NA, palette contains least one grayscale color (can also white), used color missing values. case one grayscale color, lightest taken. remove..grays determines happens grays. light..dark sequential \"seq\" palettes automatically ordered light dark? remove.names individual color names removed? biv.method method create bivariate palette. Options \"byrow\" means colors wrapped row-wise color matrix number rows columns automatically determined, \"byrowX\" X (integer 2 9) columns, \"bycol\" \"bycolX similar wrapped column-wise. \"div2seqseq\" \"div2catseq means colors extracted divering palette. former translates colors matrix neutral color diagonal, latter places neutral color middle column. \"seq2uncseq\" space color space interpolated colors determined. Options: \"rgb\" (RGB) \"Lab\" (CIE Lab). range_matrix_args list lists, one palette. list specifies range sequential diverging palettes, case indexed. See details. bib bibtex reference form utils::bibentry object. description description series. series contains multiple series (rather one value), please specify vector length series. See c4a_series descriptions currently loaded series. data cols4all data created c4a_data overwrite case palettes already exist (.e. full names), old names overwritten? ... passed c4a_data","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build and load palette data — c4a_data","text":"c4a_data object, list four items: data, s, citation, description","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build and load palette data — c4a_data","text":"cols4all, palettes organized series type. series 'family' specifies palettes belong . instance \"brewer\" stands color palettes ColorBrewer. Run c4a_series get overview loaded series. type specifies kind palette ; see c4a_types description implemented ones. function structures palette data, consistent palette data. includes: Palette names made consistent. use convention \"my_series.my_palette\", lower case, period separate series name palette name, underscores separate words. (c4a_data, bypassed c4a_data_as_is)  Categorical palettes: black removed categorical palettes, grayscale color assigned used missing values (grayscale colors removed). Sequential palettes sorted light dark. Indexing: categorical \"cat\" palette, optional \"index\" attribute determines colors use lengths: palette consists k colors, index list k, -th element integer vector length values 1,2,...,k. See c4a_info(\"rainbow\")  example. Range: sequential diverging palettes usually defined 9+ colors. optional \"range_matrix\" attribute determines range used less colors. n x 2 matrix row defines applied range palette length . sequential palettes range c(0,1) means palette generated (via color ramp) two outermost colors. diverging palettes, range c(x, y) means sides palette generated (via color ramp) x, distance center color, y represents outermost colors. range automatically set sequential diverging palettes \"index\" \"range_matrix\" attribute via parameter range_matrix_args, list per palette. arguments sequential palette : nmin minimum number colors range reduced, nmax, number colors range set c(0,1), slope_min slope_max determine slopes range reduction palette length nmax nmin, space sets color space color ramp applied (\"rgb\" \"Lab\"). arguments diverging palette , one slope used (namely outermost colors). may take time process, especially large categorical palettes, calculations color blind checks.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build and load palette data — c4a_data","text":"","code":"# palettes extracted Pink Floyd albums pf = list(piper = c(\"#391C1C\", \"#C6C6AA\", \"#713939\", \"#C6391C\",     \"#C6E3C6\", \"#AA7155\", \"#AA8E71\", \"#C68E71\"),       saucerful = c(\"#000000\", \"#1C1C1C\", \"#393939\", \"#FFFFFF\",     \"#555555\", \"#8E8E71\", \"#E3C6AA\", \"#715539\"),       atom = c(\"#C6E3FF\", \"#397139\", \"#557139\", \"#E3E3C6\",     \"#1C1C1C\", \"#1C551C\", \"#AAAA8E\", \"#8EC6E3\"),       meddle = c(\"#715539\", \"#553939\", \"#8E7155\", \"#71AAAA\",     \"#8E8E71\", \"#1CAAE3\", \"#55C6E3\", \"#AA7155\"),       obscured = c(\"#000000\", \"#1C1C1C\", \"#393939\", \"#717155\",     \"#8E8E71\", \"#715539\", \"#C6AA8E\", \"#E3C6AA\"),       moon = c(\"#000000\", \"#FF0000\", \"#FF9224\", \"#FFFF00\",     \"#71C600\", \"#00C6FF\", \"#8E398E\", \"#FFFFFF\"),       wish = c(\"#FFFFFF\", \"#AAC6E3\", \"#8E8E8E\", \"#717155\",     \"#555539\", \"#8E8E71\", \"#555555\", \"#8E7155\"),       animals = c(\"#391C39\", \"#393955\", \"#E3C671\", \"#718E8E\",     \"#AAAA8E\", \"#C67139\", \"#AA5539\", \"#E3AA39\"),       wall = c(\"#FFFFFF\", \"#E3E3E3\", \"#C6C6C6\", \"#AAAAC6\",     \"#1C1C1C\", \"#000000\", \"#8E8E8E\", \"#E3C6E3\"),       cut = c(\"#000000\", \"#E30000\", \"#AA0000\", \"#391C55\",     \"#FFE3E3\", \"#1C1C00\", \"#FFAA55\", \"#8E8E55\"),       lapse = c(\"#000000\", \"#8E8EC6\", \"#8E8E71\", \"#7171AA\",     \"#39391C\", \"#717171\", \"#AAAAAA\", \"#E3E3E3\"),       division = c(\"#000000\", \"#FFFFC6\", \"#00398E\", \"#AA8E55\",     \"#39558E\", \"#C6AA71\", \"#39391C\", \"#555571\"),       more = c(\"#0055AA\", \"#FFAA1C\", \"#1C71AA\", \"#003971\",     \"#E38E55\", \"#E3AAAA\", \"#718EAA\", \"#71718E\"),       umma = c(\"#AA8E71\", \"#555539\", \"#39391C\", \"#1C1C1C\",     \"#E3E3C6\", \"#715539\", \"#391C1C\", \"#8E7155\"),       relics = c(\"#3955AA\", \"#1C3971\", \"#5571C6\", \"#715555\",     \"#8E7155\", \"#E3AA71\", \"#8E8EAA\", \"#E3FFFF\"),       river = c(\"#393939\", \"#555555\", \"#39558E\", \"#C6C6C6\",     \"#718EAA\", \"#1C1C1C\", \"#717171\", \"#E3C68E\"))  if (requireNamespace(\"colorblindcheck\", quietly = TRUE)) {   pfdata = c4a_data_as_is(pf, series = \"pinkfloyd\",     description = \"Palettes extracted from Pink Floyd album covers\")   c4a_load(pfdata)    c4a_series()   c4a_overview()    if (requireNamespace(\"shiny\") &&     requireNamespace(\"shinyjs\") &&     requireNamespace(\"kableExtra\") &&     requireNamespace(\"colorblindcheck\") &&     interactive()) {     c4a_gui(series = \"pinkfloyd\", n = 8)   } } #> Loading required namespace: shiny #> Loading required namespace: shinyjs #> Loading required namespace: kableExtra"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical user interface to analyse palettes — c4a_gui","title":"Graphical user interface to analyse palettes — c4a_gui","text":"Graphical user interface analyse palettes. c4a_table shows table can opened browser. c4a_gui graphical user interface (shiny app) around table.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical user interface to analyse palettes — c4a_gui","text":"","code":"c4a_gui(type = \"cat\", n = NA, series = \"all\")  c4a_table(   type = c(\"cat\", \"seq\", \"div\", \"cyc\", \"bivs\", \"bivc\", \"bivd\", \"bivg\"),   n = NULL,   m = NULL,   n.only = FALSE,   cvd.sim = c(\"none\", \"deutan\", \"protan\", \"tritan\"),   sort = \"name\",   text.format = \"hex\",   text.col = \"same\",   series = \"all\",   range = NA,   colorsort = \"orig\",   include.na = FALSE,   show.scores = FALSE,   columns = NA,   verbose = TRUE )"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_gui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical user interface to analyse palettes — c4a_gui","text":"type type palette. Run c4a_types see implemented types description. c4a_gui determines type shown initially. n, m n number displayed colors. bivariate palettes \"biv\", n m number columns rows respectively. omitted: \"cat\" full palette displayed, \"seq\" \"div\", 9 colors, \"bivs\"/\"bivc\"/\"bivd\"/\"bivg\" 4 columns rows. c4a_gui determines number colors initially. series Series palettes show. See c4a_series options. default, \"\", means series. c4a_gui determines series shown initially. n.palettes contained exactly n.colors (FALSE default) cvd.sim color vision deficiency simulation: one \"none\", \"deutan\", \"protan\", \"tritan\" sort column name sort data. available column names depend arguments type show.scores. listed warning message. Use \"-\" prefix reverse order. text.format format text colors. One \"hex\", \"RGB\" \"HCL\". text.col text color colors. default \"\", means colors (invisible, available selection). \"auto\" means automatic: black light colors white dark colors. range vector two numbers determine range used sequential diverging palettes. numbers 0 1. first number determines palette begins, second number ends. sequential palettes, 0 means leftmost (normally lightest) color, 1 rightmost (often darkest) color. diverging palettes, 0 means middle color, 1 extremes. one number provided, number interpreted endpoint (0 taken start). default, set automatically, based n. colorsort Sort colors (\"cat\" ). Options: \"orig\" (original order), \"Hx\" (hue, x starting number 0 360), \"C\" (chroma), \"L\" (luminance) include.na color missing values shown? FALSE default show.scores scores quality indicators printed? See details description indicators. columns number columns. default equal n , specified, 12. higher palette lengths. verbose messages warnings printed?","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical user interface to analyse palettes — c4a_gui","text":"HMTL table (kableExtra object)","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_gui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical user interface to analyse palettes — c4a_gui","text":"","code":"if (requireNamespace(\"shiny\") &&   requireNamespace(\"shinyjs\") &&   requireNamespace(\"kableExtra\") &&   requireNamespace(\"colorblindcheck\") &&   interactive()) {  c4a_gui()  # categorical palettes with maximum number of colors c4a_table(type = \"cat\")  # sort sequential palettes by hue c4a_table(type = \"seq\", n = 7, sort = \"H\")  # sort sequential palettes by hue type (how many hues are used) c4a_table(type = \"seq\", n = 5, sort = \"hues\") }"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information from a cols4all palette — c4a_info","title":"Get information from a cols4all palette — c4a_info","text":"Get information cols4all palette","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information from a cols4all palette — c4a_info","text":"","code":"c4a_info(palette, no.match = c(\"message\", \"error\", \"null\"), verbose = TRUE)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information from a cols4all palette — c4a_info","text":"palette name palette .match happens match found? Options: \"message\": message thrown suggestions, \"error\": error thrown, \"null\": NULL returned verbose messages printed?","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information from a cols4all palette — c4a_info","text":"list following items: name, series, fullname, type, palette (colors), na (color), nmax, reverse. latter TRUE \"-\" prefix palette name.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit cols4all palettes (in development) — c4a_modify","title":"Edit cols4all palettes (in development) — c4a_modify","text":"Edit cols4all palettes. c4a_duplicate duplicates existing cols4all palette, c4a_modify used change colors. Use c4a_data craete palettes scratch.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit cols4all palettes (in development) — c4a_modify","text":"","code":"c4a_modify(palette, x = NULL, xNA = NULL)  c4a_duplicate(palette, name = NA)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit cols4all palettes (in development) — c4a_modify","text":"palette name palette x vector new colors. either length, named vector, names correspond index numbers. E.g. c(\"3\" = \"#AABBCC\") replace third color color \"#AABBCC\". xNA new color missing values. name name new palette","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit cols4all palettes (in development) — c4a_modify","text":"","code":"c4a_duplicate(\"brewer.set2\", \"set2_mod\") c4a_modify(\"set2_mod\", c(\"4\" = \"#EA8AB8\"))"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cols4all options — c4a_options","title":"Set cols4all options — c4a_options","text":"Get set global options c4a. Works similar base function options","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cols4all options — c4a_options","text":"","code":"c4a_options(...)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cols4all options — c4a_options","text":"... Use character values retrieve options. set options, either use named arguments (names refer options), list consists options.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set cols4all options — c4a_options","text":"list options","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available palette names and series — c4a_palettes","title":"Get available palette names and series — c4a_palettes","text":"c4a_palettes lists available cols4all color palettes. Palettes organized series. available series listed c4a_series. Palettes also organized per functional type, currently support: categorical \"cat\", sequential \"seq\", diverging \"div\"\" palette types. function c4a_types lists available types. function c4a_overview gives overview table number palette per series type. IDE auto-completion (RStudio) possible browse palette names .P (using $ like lists).","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available palette names and series — c4a_palettes","text":"","code":"c4a_palettes(   type = c(\"all\", \"cat\", \"seq\", \"div\", \"cyc\"),   series = NULL,   full.names = TRUE )  c4a_series(type = c(\"all\", \"cat\", \"seq\", \"div\", \"cyc\"), as.data.frame = TRUE)  c4a_types(series = NULL, as.data.frame = TRUE)  c4a_overview(return.matrix = FALSE)  .P"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get available palette names and series — c4a_palettes","text":"object class environment length 17.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available palette names and series — c4a_palettes","text":"type type color palette: one \"\" (palettes), \"cat\" (categorical/qualitative palettes), \"seq\" (sequential palettes) \"div\" (diverging palettes). series series list palettes . Run c4a_series see options. full.names full names, .e. prefix \"series.\"? default TRUE. .data.frame c4a_series c4a_types return result data.frame, description included column? return.matrix matrix returned numbers per palette type? FALSE data.frame returned addional information","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available palette names and series — c4a_palettes","text":"names loaded color palettes","code":""},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available palette names and series — c4a_palettes","text":"","code":"c4a_series() #>        series                                         description #> 1      brewer                                ColorBrewer palettes #> 2       carto                          Palettes designed by CARTO #> 3    cols4all                  cols4all palettes (in development) #> 4         hcl  Palettes from the Hue Chroma Luminance color space #> 5      kovesi                   Palettes designed by Peter Kovesi #> 6  matplotlib         Palettes from the Python library matplotlib #> 7         met Palettes inspired by The Metropolitan Museum of Art #> 8        misc                              Miscellaneous palettes #> 9       parks                 Palettes inspired by National Parks #> 10  pinkfloyd     Palettes extracted from Pink Floyd album covers #> 11       poly               Qualitative palettes with many colors #> 12    powerbi                    Palettes from Microsoft Power BI #> 13      scico     Scientific colour map palettes by Fabio Crameri #> 14    seaborn            Palettes from the Python library Seaborn #> 15    stevens                Bivariate palettes by Joshua Stevens #> 16    tableau                        Palettes designed by Tableau #> 17        tol                       Palettes designed by Paul Tol #> 18        wes                   Palettes from Wes Anderson movies  c4a_types() #>   type                          description #> 1  cat                          categorical #> 2  seq                           sequential #> 3  div                            diverging #> 4  cyc                               cyclic #> 5 bivs  bivariate (sequential x sequential) #> 6 bivc bivariate (sequential x categorical) #> 7 bivd   bivariate (sequential x diverging) #> 8 bivg bivariate (sequential x desaturated)  c4a_overview() #>        series                                         description cat seq div #> 1      brewer                                ColorBrewer palettes   9  18   9 #> 2       carto                          Palettes designed by CARTO   6  21   7 #> 3    cols4all                  cols4all palettes (in development)  14  NA   2 #> 4         hcl  Palettes from the Hue Chroma Luminance color space   9  23  11 #> 5      kovesi                   Palettes designed by Peter Kovesi  NA  28  14 #> 6  matplotlib         Palettes from the Python library matplotlib  NA  51  12 #> 7         met Palettes inspired by The Metropolitan Museum of Art  33   8  14 #> 8        misc                              Miscellaneous palettes   5  NA  NA #> 9       parks                 Palettes inspired by National Parks  22   5   3 #> 10  pinkfloyd     Palettes extracted from Pink Floyd album covers  16  NA  NA #> 11       poly               Qualitative palettes with many colors   9  NA  NA #> 12    powerbi                    Palettes from Microsoft Power BI  19   1   4 #> 13      scico     Scientific colour map palettes by Fabio Crameri  21  21  10 #> 14    seaborn            Palettes from the Python library Seaborn   6   4   2 #> 15    stevens                Bivariate palettes by Joshua Stevens  NA  NA  NA #> 16    tableau                        Palettes designed by Tableau  29  23  28 #> 17        tol                       Palettes designed by Paul Tol   8   8   4 #> 18        wes                   Palettes from Wes Anderson movies  23  NA   1 #>    cyc bivs bivc bivd bivg #> 1   NA    2    2    1   NA #> 2   NA   NA   NA   NA   NA #> 3   NA    2   NA    2    5 #> 4    6   NA   NA   NA   NA #> 5    8   NA   NA   NA   NA #> 6    3   NA   NA   NA   NA #> 7   NA   NA    1   NA   NA #> 8   NA   NA    3   NA   NA #> 9   NA   NA   NA   NA   NA #> 10  NA   NA   NA   NA   NA #> 11  NA   NA   NA   NA   NA #> 12  NA   NA   NA   NA   NA #> 13   5   NA    2   NA    1 #> 14  NA   NA   NA   NA   NA #> 15  NA    5   NA   NA   NA #> 16  NA   NA    3   NA   NA #> 17  NA   NA   NA   NA   NA #> 18  NA   NA   NA   NA   NA  c4a_palettes(type = \"cat\", series = \"tol\") #> [1] \"tol.bright\"   \"tol.contrast\" \"tol.vibrant\"  \"tol.muted\"    \"tol.medium\"   #> [6] \"tol.light\"    \"tol.dark\"     \"tol.rainbow\"   c4a_palettes(type = \"seq\", series = \"kovesi\") #>  [1] \"kovesi.cy_or\"                   \"kovesi.isoluminant_cgo_80_c38\"  #>  [3] \"kovesi.isoluminant_cm_70_c39\"   \"kovesi.bu_gn_yl_wh\"             #>  [5] \"kovesi.bu_gn_yl\"                \"kovesi.linear_bgyw_15_100_c68\"  #>  [7] \"kovesi.blue_cyan\"               \"kovesi.blue\"                    #>  [9] \"kovesi.bu_wh_mg\"                \"kovesi.linear_bmw_5_95_c89\"     #> [11] \"kovesi.bu_yl_mg\"                \"kovesi.linear_bmy_10_95_c78\"    #> [13] \"kovesi.linear_gow_60_85_c27\"    \"kovesi.linear_gow_65_90_c35\"    #> [15] \"kovesi.green\"                   \"kovesi.linear_grey_0_100_c0\"    #> [17] \"kovesi.grey\"                    \"kovesi.bk_rd_yl\"                #> [19] \"kovesi.linear_kry_5_98_c75\"     \"kovesi.bk_rd_wh\"                #> [21] \"kovesi.linear_kryw_5_100_c67\"   \"kovesi.ternary_blue\"            #> [23] \"kovesi.ternary_green\"           \"kovesi.ternary_red\"             #> [25] \"kovesi.rainbow_bu_gn_yl_rd\"     \"kovesi.rainbow_bgyr_35_85_c73\"  #> [27] \"kovesi.rainbow_bu_gn_yl_rd_mg\"  \"kovesi.rainbow_bgyrm_35_85_c71\"  # handy when auto-completion is available: .P$kovesi$seq$linear_terrain #> NULL"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a color palette — c4a_plot","title":"Plot a color palette — c4a_plot","text":"Plot color palette, either cols4all palette, color vector. c4a_plot_cvd shortcut include color-blind simulated colors, `c4a_plot_hex shortcut print hex codes instead labels.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a color palette — c4a_plot","text":"","code":"c4a_plot(   palette,   ...,   dark = FALSE,   include.na = FALSE,   hex = FALSE,   include.cvd = FALSE,   nrows = NA,   ncols = NA )  c4a_plot_cvd(...)  c4a_plot_hex(...)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a color palette — c4a_plot","text":"palette Palette name (see c4a) color vector ... arguments passed c4a dark dark (black) background? include.na color missing values included? hex hex codes printed instead color labels (numbers)? include.cvd color deficiency simulated colors included? nrows, ncols Number rows columns. Ignored include.cvd = TRUE (case, rows used simulated colors). default automatically calculated based aspect ratio device.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a color palette — c4a_plot","text":"Besides plot, gTree returned silently","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a color palette — c4a_plot","text":"","code":"c4a_plot(\"brewer.set1\", nrows=1)   c4a_plot(\"greens\", nrows=1)   c4a_plot(\"tol.pu_gn\", nrows=1)   c4a_plot(.P$c4a$bivs$pu_gn_bivs, n = 5) #> Error: palette is not a character vector  c4a_plot(.P$c4a$bivd$pu_gn_bivd, n = 5) #> Error: palette is not a character vector  c4a_plot(.P$c4a$bivg$gn_bivg, n = 5) #> Error: palette is not a character vector"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information from a cols4all palette — c4a_scores","title":"Get information from a cols4all palette — c4a_scores","text":"Get information cols4all palette","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information from a cols4all palette — c4a_scores","text":"","code":"c4a_scores(   palette,   n = NA,   no.match = c(\"message\", \"error\", \"null\"),   verbose = TRUE )"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information from a cols4all palette — c4a_scores","text":"palette name palette n number colors .match happens match found? Options: \"message\": message thrown suggestions, \"error\": error thrown, \"null\": NULL returned verbose messages printed?","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information from a cols4all palette — c4a_scores","text":"list following items: name, series, fullname, type, palette (colors), na (color), nmax, reverse. latter TRUE \"-\" prefix palette name.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_sysdata_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and export system data — c4a_sysdata_import","title":"Import and export system data — c4a_sysdata_import","text":"Import export system data. c4a_sysdata_import import system data overwrite current system data, c4a_sysdata_export export current system data, c4a_sysdata_remove (partly) removes system data.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_sysdata_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and export system data — c4a_sysdata_import","text":"","code":"c4a_sysdata_import(data)  c4a_sysdata_export()  c4a_sysdata_remove(fullnames = NULL, series = NULL, are.you.sure = NA)"},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_sysdata_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and export system data — c4a_sysdata_import","text":"data cols4all data (see c4a_data) fullnames full palette names (format series.palette_name) series character vector series names removed (use \"\" remove ). ..sure sure want remove series?","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_sysdata_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and export system data — c4a_sysdata_import","text":"c4a_sysdata_export returns system data (list)","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/c4a_sysdata_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and export system data — c4a_sysdata_import","text":"","code":"x = c4a_sysdata_export() c4a_sysdata_import(x) #> cols4all system data imported successfully y = c4a_sysdata_export() identical(x, y) #> [1] TRUE"},{"path":"https://mtennekes.github.io/cols4all/reference/cols4all-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cols4all overview — cols4all-package","title":"cols4all overview — cols4all-package","text":"cols4all stands : color palettes people, including color vision deficiency. Popular color palette series, ColorBrewer, organized type scored several properties color-blind-friendliness fairness (.e. colors stand equally?). palettes can also loaded analysed. Besides common palette types (categorical, sequential, diverging) also includes bivariate color palettes. ggplot2 scales included.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/cols4all-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cols4all overview — cols4all-package","text":"page provides brief overview package functions.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://mtennekes.github.io/cols4all/reference/cols4all-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cols4all overview — cols4all-package","text":"Maintainer: Martijn Tennekes mtennekes@gmail.com contributors: Marco Puts mputs@acm.org [contributor] Achim Zeileis Achim.Zeileis@R-project.org [contributor] Jakub Nowosad nowosad.jakub@gmail.com [contributor] Robin Lovelace rob00x@gmail.com [contributor] Helgasoft contact@helgasoft.com [contributor] Matthew Petroff matthew@mpetroff.net [contributor] Olivier Roy [contributor]","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/scales_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","title":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","text":"col4all scales ggplot2. scale functions organized scale_<aesthetic>_<mapping>_c4a_<type>, <aesthetic> either colo(u)r fill, <mapping> refers mapping applied (discrete, continuous binned), <type> palette type: cat, seq, div.","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/scales_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","text":"","code":"scale_color_discrete_c4a_cat(   palette = NULL,   reverse = FALSE,   order = NULL,   ... )  scale_colour_discrete_c4a_cat(   palette = NULL,   reverse = FALSE,   order = NULL,   ... )  scale_fill_discrete_c4a_cat(palette = NULL, reverse = FALSE, order = NULL, ...)  scale_color_discrete_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   ... )  scale_colour_discrete_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   ... )  scale_fill_discrete_c4a_seq(palette = NULL, reverse = FALSE, range = NULL, ...)  scale_color_discrete_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   ... )  scale_colour_discrete_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   ... )  scale_fill_discrete_c4a_div(palette = NULL, reverse = FALSE, range = NULL, ...)  scale_color_continuous_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_colour_continuous_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_fill_continuous_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_color_continuous_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_colour_continuous_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_fill_continuous_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_color_binned_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_colour_binned_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_fill_binned_c4a_seq(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_color_binned_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_colour_binned_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )  scale_fill_binned_c4a_div(   palette = NULL,   reverse = FALSE,   range = NULL,   mid = 0,   n_interp = 11,   ... )"},{"path":"https://mtennekes.github.io/cols4all/reference/scales_ggplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","text":"palette, reverse, order, range See c4a. ... parameters passed underlying scale functions: discrete_scale, continuous_scale, binned_scale. mid data value mapped mid-point diverging color scale n_interp number discrete colors used interpolate continuous color scale. Recommended use odd number include midpoint","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/scales_ggplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","text":"ggplot2 component defines scale","code":""},{"path":"https://mtennekes.github.io/cols4all/reference/scales_ggplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"col4all scales for ggplot2 — scale_color_discrete_c4a_cat","text":"","code":"if (require(\"ggplot2\")) {   data(\"diamonds\")   diam_exp = diamonds[diamonds$price >= 15000, ]   diam_exp$clarity[1:500] = NA    # discrete categorical scale   ggplot(diam_exp, aes(x = carat, y = price, color = color)) +     geom_point(size = 2) +     scale_color_discrete_c4a_cat(\"carto.safe\") +     theme_light()    # missing values   c4a_plot(\"tol.muted\", 8)   ggplot(diam_exp, aes(x = carat, y = price, fill = clarity)) +     geom_point(size = 2, shape = 21) +     scale_fill_discrete_c4a_cat(\"tol.muted\") +     theme_light()    # discrete sequential scale   ggplot(diam_exp, aes(x = carat, y = price, color = cut)) +     geom_point(size = 2) +     scale_color_discrete_c4a_seq(\"hcl.blues2\") +     theme_light()    # continuous sequential scale   ggplot(diam_exp, aes(x = carat, y = price, color = depth)) +     geom_point(size = 2) +     scale_color_continuous_c4a_seq(\"hcl.blues2\", range = c(0.4, 1)) +     theme_light()    # continuous diverging scale   ggplot(diam_exp, aes(x = carat, y = depth, color = price)) +     geom_point(size = 2) +     scale_color_continuous_c4a_div(\"wes.zissou1\", mid = mean(diam_exp$price)) +     theme_light()    # binned sequential scale   ggplot(diam_exp, aes(x = carat, y = price, color = depth)) +     geom_point(size = 2) +     scale_color_binned_c4a_seq(\"scico.batlow\", range = c(0.4, 1)) +     theme_light() } #> Loading required package: ggplot2"},{"path":"https://mtennekes.github.io/cols4all/news/index.html","id":"cols4all-08-devel","dir":"Changelog","previous_headings":"","what":"cols4all 0.8 (devel)","title":"cols4all 0.8 (devel)","text":"selectinput tabs sorted main table added n=max filter categorical palettes [!] added categorical palettes updated contrast/equiluminance columns added sorting cat seq palettes added fairness plot","code":""},{"path":"https://mtennekes.github.io/cols4all/news/index.html","id":"cols4all-07-1","dir":"Changelog","previous_headings":"","what":"cols4all 0.7-1","title":"cols4all 0.7-1","text":"CRAN release: 2024-03-12 fixed critical bug c4a_gui","code":""},{"path":"https://mtennekes.github.io/cols4all/news/index.html","id":"cols4all-07","dir":"Changelog","previous_headings":"","what":"cols4all 0.7","title":"cols4all 0.7","text":"CRAN release: 2024-03-06 improved similarity matrix plot improved applications tab added naming column (development) added new ‘tol’ palettes scores shown precision compatibility tmap 4.0","code":""},{"path":"https://mtennekes.github.io/cols4all/news/index.html","id":"cols4all-06-1","dir":"Changelog","previous_headings":"","what":"cols4all 0.6-1","title":"cols4all 0.6-1","text":"fixed bug confusion lines","code":""},{"path":"https://mtennekes.github.io/cols4all/news/index.html","id":"cols4all-06","dir":"Changelog","previous_headings":"","what":"cols4all 0.6","title":"cols4all 0.6","text":"CRAN release: 2023-02-02 first CRAN release","code":""}]
